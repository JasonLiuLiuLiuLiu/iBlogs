name: master

on:
  push:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Maven Package
        run: mvn -B clean package -DskipTests
      - name: Maven Verify
        run: mvn -B clean verify -Pintegration-Test

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_REPO }}
          tags: prod-${{ github.run_number }}

  deploy:
    name: deploy container
    runs-on: ubuntu-latest
    needs: [docker]

    steps:
      - name: deploy container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODHOST }}
          username: ${{ secrets.PRODUSERNAME }}
          password: ${{ secrets.PRODPASSWORD }}
          port: ${{ secrets.PRODPORT }}
          command_timeout: 30m
          script: |
            docker stop ${{ secrets.DOCKER_CONTAINER_NAME }}
            docker rm ${{ secrets.DOCKER_CONTAINER_NAME }}
            docker run --restart always --name ${{ secrets.DOCKER_CONTAINER_NAME }} -d -p 8080:8080 ${{ secrets.DOCKER_REPO }}:prod-${{ github.run_number }} --spring.datasource.url="${{secrets.SPRING_DATASOURCE_URL}}" --spring.redis.host="${{secrets.SPRING_REDIS_HOST}}" --spring.datasource.password="${{secrets.SPRING_DATASOURCE_PASSWORD}}" --spring.redis.port="${{secrets.SPRING_REDIS_PORT}}" --spring.redis.password="${{secrets.SPRING_REDIS_PASSWORD}}" --ftp.password="${{secrets.UPYUM_PASSWORD}}" --upYun.password="${{secrets.UPYUM_PASSWORD}}"
