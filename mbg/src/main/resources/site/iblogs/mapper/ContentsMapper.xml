<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.iblogs.mapper.ContentsMapper">
  <resultMap id="BaseResultMap" type="site.iblogs.model.Contents">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="Slug" jdbcType="VARCHAR" property="slug" />
    <result column="Modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="Hits" jdbcType="INTEGER" property="hits" />
    <result column="Type" jdbcType="INTEGER" property="type" />
    <result column="Status" jdbcType="INTEGER" property="status" />
    <result column="CommentsNum" jdbcType="INTEGER" property="commentsnum" />
    <result column="AllowComment" jdbcType="BIT" property="allowcomment" />
    <result column="AllowPing" jdbcType="BIT" property="allowping" />
    <result column="AllowFeed" jdbcType="BIT" property="allowfeed" />
    <result column="AuthorId" jdbcType="INTEGER" property="authorid" />
    <result column="Created" jdbcType="TIMESTAMP" property="created" />
    <result column="Deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="site.iblogs.model.Contents">
    <result column="Title" jdbcType="LONGVARCHAR" property="title" />
    <result column="Content" jdbcType="LONGVARCHAR" property="content" />
    <result column="FmtType" jdbcType="LONGVARCHAR" property="fmttype" />
    <result column="ThumbImg" jdbcType="LONGVARCHAR" property="thumbimg" />
    <result column="Tags" jdbcType="LONGVARCHAR" property="tags" />
    <result column="Categories" jdbcType="LONGVARCHAR" property="categories" />
    <result column="Url" jdbcType="LONGVARCHAR" property="url" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, Slug, Modified, Hits, Type, Status, CommentsNum, AllowComment, AllowPing, AllowFeed, 
    AuthorId, Created, Deleted
  </sql>
  <sql id="Blob_Column_List">
    Title, Content, FmtType, ThumbImg, Tags, Categories, Url
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="site.iblogs.model.ContentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Contents
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="site.iblogs.model.ContentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Contents
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Contents
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from Contents
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="site.iblogs.model.ContentsExample">
    delete from Contents
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="site.iblogs.model.Contents">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Contents (Slug, Modified, Hits, 
      Type, Status, CommentsNum, 
      AllowComment, AllowPing, AllowFeed, 
      AuthorId, Created, Deleted, 
      Title, Content, FmtType, 
      ThumbImg, Tags, Categories, 
      Url)
    values (#{slug,jdbcType=VARCHAR}, #{modified,jdbcType=TIMESTAMP}, #{hits,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{commentsnum,jdbcType=INTEGER}, 
      #{allowcomment,jdbcType=BIT}, #{allowping,jdbcType=BIT}, #{allowfeed,jdbcType=BIT}, 
      #{authorid,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{deleted,jdbcType=BIT}, 
      #{title,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}, #{fmttype,jdbcType=LONGVARCHAR}, 
      #{thumbimg,jdbcType=LONGVARCHAR}, #{tags,jdbcType=LONGVARCHAR}, #{categories,jdbcType=LONGVARCHAR}, 
      #{url,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="site.iblogs.model.Contents">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into Contents
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="slug != null">
        Slug,
      </if>
      <if test="modified != null">
        Modified,
      </if>
      <if test="hits != null">
        Hits,
      </if>
      <if test="type != null">
        Type,
      </if>
      <if test="status != null">
        Status,
      </if>
      <if test="commentsnum != null">
        CommentsNum,
      </if>
      <if test="allowcomment != null">
        AllowComment,
      </if>
      <if test="allowping != null">
        AllowPing,
      </if>
      <if test="allowfeed != null">
        AllowFeed,
      </if>
      <if test="authorid != null">
        AuthorId,
      </if>
      <if test="created != null">
        Created,
      </if>
      <if test="deleted != null">
        Deleted,
      </if>
      <if test="title != null">
        Title,
      </if>
      <if test="content != null">
        Content,
      </if>
      <if test="fmttype != null">
        FmtType,
      </if>
      <if test="thumbimg != null">
        ThumbImg,
      </if>
      <if test="tags != null">
        Tags,
      </if>
      <if test="categories != null">
        Categories,
      </if>
      <if test="url != null">
        Url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="slug != null">
        #{slug,jdbcType=VARCHAR},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="hits != null">
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="commentsnum != null">
        #{commentsnum,jdbcType=INTEGER},
      </if>
      <if test="allowcomment != null">
        #{allowcomment,jdbcType=BIT},
      </if>
      <if test="allowping != null">
        #{allowping,jdbcType=BIT},
      </if>
      <if test="allowfeed != null">
        #{allowfeed,jdbcType=BIT},
      </if>
      <if test="authorid != null">
        #{authorid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="title != null">
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="fmttype != null">
        #{fmttype,jdbcType=LONGVARCHAR},
      </if>
      <if test="thumbimg != null">
        #{thumbimg,jdbcType=LONGVARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=LONGVARCHAR},
      </if>
      <if test="categories != null">
        #{categories,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="site.iblogs.model.ContentsExample" resultType="java.lang.Long">
    select count(*) from Contents
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Contents
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.slug != null">
        Slug = #{record.slug,jdbcType=VARCHAR},
      </if>
      <if test="record.modified != null">
        Modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hits != null">
        Hits = #{record.hits,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        Type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        Status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.commentsnum != null">
        CommentsNum = #{record.commentsnum,jdbcType=INTEGER},
      </if>
      <if test="record.allowcomment != null">
        AllowComment = #{record.allowcomment,jdbcType=BIT},
      </if>
      <if test="record.allowping != null">
        AllowPing = #{record.allowping,jdbcType=BIT},
      </if>
      <if test="record.allowfeed != null">
        AllowFeed = #{record.allowfeed,jdbcType=BIT},
      </if>
      <if test="record.authorid != null">
        AuthorId = #{record.authorid,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        Created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleted != null">
        Deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.title != null">
        Title = #{record.title,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null">
        Content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.fmttype != null">
        FmtType = #{record.fmttype,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.thumbimg != null">
        ThumbImg = #{record.thumbimg,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.tags != null">
        Tags = #{record.tags,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.categories != null">
        Categories = #{record.categories,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.url != null">
        Url = #{record.url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update Contents
    set Id = #{record.id,jdbcType=INTEGER},
      Slug = #{record.slug,jdbcType=VARCHAR},
      Modified = #{record.modified,jdbcType=TIMESTAMP},
      Hits = #{record.hits,jdbcType=INTEGER},
      Type = #{record.type,jdbcType=INTEGER},
      Status = #{record.status,jdbcType=INTEGER},
      CommentsNum = #{record.commentsnum,jdbcType=INTEGER},
      AllowComment = #{record.allowcomment,jdbcType=BIT},
      AllowPing = #{record.allowping,jdbcType=BIT},
      AllowFeed = #{record.allowfeed,jdbcType=BIT},
      AuthorId = #{record.authorid,jdbcType=INTEGER},
      Created = #{record.created,jdbcType=TIMESTAMP},
      Deleted = #{record.deleted,jdbcType=BIT},
      Title = #{record.title,jdbcType=LONGVARCHAR},
      Content = #{record.content,jdbcType=LONGVARCHAR},
      FmtType = #{record.fmttype,jdbcType=LONGVARCHAR},
      ThumbImg = #{record.thumbimg,jdbcType=LONGVARCHAR},
      Tags = #{record.tags,jdbcType=LONGVARCHAR},
      Categories = #{record.categories,jdbcType=LONGVARCHAR},
      Url = #{record.url,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Contents
    set Id = #{record.id,jdbcType=INTEGER},
      Slug = #{record.slug,jdbcType=VARCHAR},
      Modified = #{record.modified,jdbcType=TIMESTAMP},
      Hits = #{record.hits,jdbcType=INTEGER},
      Type = #{record.type,jdbcType=INTEGER},
      Status = #{record.status,jdbcType=INTEGER},
      CommentsNum = #{record.commentsnum,jdbcType=INTEGER},
      AllowComment = #{record.allowcomment,jdbcType=BIT},
      AllowPing = #{record.allowping,jdbcType=BIT},
      AllowFeed = #{record.allowfeed,jdbcType=BIT},
      AuthorId = #{record.authorid,jdbcType=INTEGER},
      Created = #{record.created,jdbcType=TIMESTAMP},
      Deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="site.iblogs.model.Contents">
    update Contents
    <set>
      <if test="slug != null">
        Slug = #{slug,jdbcType=VARCHAR},
      </if>
      <if test="modified != null">
        Modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="hits != null">
        Hits = #{hits,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        Type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        Status = #{status,jdbcType=INTEGER},
      </if>
      <if test="commentsnum != null">
        CommentsNum = #{commentsnum,jdbcType=INTEGER},
      </if>
      <if test="allowcomment != null">
        AllowComment = #{allowcomment,jdbcType=BIT},
      </if>
      <if test="allowping != null">
        AllowPing = #{allowping,jdbcType=BIT},
      </if>
      <if test="allowfeed != null">
        AllowFeed = #{allowfeed,jdbcType=BIT},
      </if>
      <if test="authorid != null">
        AuthorId = #{authorid,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        Created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        Deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="title != null">
        Title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null">
        Content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="fmttype != null">
        FmtType = #{fmttype,jdbcType=LONGVARCHAR},
      </if>
      <if test="thumbimg != null">
        ThumbImg = #{thumbimg,jdbcType=LONGVARCHAR},
      </if>
      <if test="tags != null">
        Tags = #{tags,jdbcType=LONGVARCHAR},
      </if>
      <if test="categories != null">
        Categories = #{categories,jdbcType=LONGVARCHAR},
      </if>
      <if test="url != null">
        Url = #{url,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="site.iblogs.model.Contents">
    update Contents
    set Slug = #{slug,jdbcType=VARCHAR},
      Modified = #{modified,jdbcType=TIMESTAMP},
      Hits = #{hits,jdbcType=INTEGER},
      Type = #{type,jdbcType=INTEGER},
      Status = #{status,jdbcType=INTEGER},
      CommentsNum = #{commentsnum,jdbcType=INTEGER},
      AllowComment = #{allowcomment,jdbcType=BIT},
      AllowPing = #{allowping,jdbcType=BIT},
      AllowFeed = #{allowfeed,jdbcType=BIT},
      AuthorId = #{authorid,jdbcType=INTEGER},
      Created = #{created,jdbcType=TIMESTAMP},
      Deleted = #{deleted,jdbcType=BIT},
      Title = #{title,jdbcType=LONGVARCHAR},
      Content = #{content,jdbcType=LONGVARCHAR},
      FmtType = #{fmttype,jdbcType=LONGVARCHAR},
      ThumbImg = #{thumbimg,jdbcType=LONGVARCHAR},
      Tags = #{tags,jdbcType=LONGVARCHAR},
      Categories = #{categories,jdbcType=LONGVARCHAR},
      Url = #{url,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="site.iblogs.model.Contents">
    update Contents
    set Slug = #{slug,jdbcType=VARCHAR},
      Modified = #{modified,jdbcType=TIMESTAMP},
      Hits = #{hits,jdbcType=INTEGER},
      Type = #{type,jdbcType=INTEGER},
      Status = #{status,jdbcType=INTEGER},
      CommentsNum = #{commentsnum,jdbcType=INTEGER},
      AllowComment = #{allowcomment,jdbcType=BIT},
      AllowPing = #{allowping,jdbcType=BIT},
      AllowFeed = #{allowfeed,jdbcType=BIT},
      AuthorId = #{authorid,jdbcType=INTEGER},
      Created = #{created,jdbcType=TIMESTAMP},
      Deleted = #{deleted,jdbcType=BIT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>